{"version":3,"sources":["components/Buttons/Buttons.tsx","components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Buttons","isClockVisible","showClock","hideClock","randomName","className","type","onClick","disabled","Clock","state","time","Date","toLocaleTimeString","timerId","setInterval","this","setState","console","log","prevProps","props","name","clearInterval","React","Component","clockNames","App","clockName","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"sQAUaA,EAA2B,SAAC,GAAD,IACtCC,EADsC,EACtCA,eACAC,EAFsC,EAEtCA,UACAC,EAHsC,EAGtCA,UACAC,EAJsC,EAItCA,WAJsC,OAMtC,sBAAKC,UAAU,uBAAf,UACE,wBACEA,UAAU,4BACVC,KAAK,SACLC,QAASL,EACTM,SAAUP,EAJZ,wBAQA,wBACEI,UAAU,4BACVC,KAAK,SACLC,QAASJ,EACTK,UAAWP,EAJb,wBAQA,wBACEI,UAAU,iCACVC,KAAK,SACLC,QAASH,EACTI,UAAWP,EAJb,iCCrBSQ,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,QAAwBC,aAAY,cAAU,GALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aAAY,WACzB,EAAKE,SAAS,CACZN,MAAM,IAAIC,MAAOC,uBAInBK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAfP,gCAkBE,SAAmBS,GACbJ,KAAKK,MAAMC,OAASF,EAAUE,MAEhCJ,QAAQC,IAAR,qCACgCC,EAAUE,KAD1C,eACqDN,KAAKK,MAAMC,SAtBtE,kCA2BE,WACMN,KAAKK,MAAMpB,gBACbsB,cAAcP,KAAKF,WA7BzB,oBAiCE,WACE,IAAQQ,EAASN,KAAKK,MAAdC,KACAX,EAASK,KAAKN,MAAdC,KAER,OACE,sBAAKN,UAAU,mBAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BiB,IAC7B,oBAAGjB,UAAU,cAAc,UAAQ,OAAnC,UACE,sBAAMA,UAAU,mBAAhB,SACG,mBAEH,sBAAMA,UAAU,mBAAhB,SACGM,cA7Cb,GAA2Ba,IAAMC,YCP3BC,EAAa,CACjB,QACA,YACA,aACA,aACA,eACA,eAQIC,E,4MACJjB,MAAQ,CACNT,gBAAgB,EAChB2B,UAAW,S,EAGb1B,UAAY,WACV,EAAKe,SAAS,CAAEhB,gBAAgB,K,EAGlCE,UAAY,WACV,EAAKc,SAAS,CAAEhB,gBAAgB,K,EAGlCG,WAAa,WACX,EAAKa,SAAS,CACZW,UAAWF,EAAWG,KAAKC,MAAsB,EAAhBD,KAAKE,c,4CAI1C,WACE,MAAsCf,KAAKN,MAAnCT,EAAR,EAAQA,eAAgB2B,EAAxB,EAAwBA,UAExB,OACE,sBAAKvB,UAAU,MAAf,UACGJ,GACC,cAAC,EAAD,CAAOA,eAAgBA,EAAgBqB,KAAMM,IAG/C,cAAC,EAAD,CACE3B,eAAgBA,EAChBC,UAAWc,KAAKd,UAChBC,UAAWa,KAAKb,UAChBC,WAAYY,KAAKZ,oB,GAjCToB,IAAMC,WAwCTE,ICxDfK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dbe56662.chunk.js","sourcesContent":["import React from 'react';\nimport './Buttons.scss';\n\ntype Props = {\n  isClockVisible: boolean;\n  showClock(): void;\n  hideClock(): void;\n  randomName(): void;\n};\n\nexport const Buttons: React.FC<Props> = ({\n  isClockVisible,\n  showClock,\n  hideClock,\n  randomName,\n}) => (\n  <div className=\"App__buttons buttons\">\n    <button\n      className=\"button button__show-clock\"\n      type=\"button\"\n      onClick={showClock}\n      disabled={isClockVisible}\n    >\n      Show Clock\n    </button>\n    <button\n      className=\"button button__hide-clock\"\n      type=\"button\"\n      onClick={hideClock}\n      disabled={!isClockVisible}\n    >\n      Hide Clock\n    </button>\n    <button\n      className=\"button button__set-random-name\"\n      type=\"button\"\n      onClick={randomName}\n      disabled={!isClockVisible}\n    >\n      Set random name\n    </button>\n  </div>\n);\n","import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  isClockVisible: boolean;\n  name: string;\n};\n\ntype State = {\n  time: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 0);\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        time: new Date().toLocaleTimeString(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.time);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.log(\n        `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.isClockVisible) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"App__clock clock\">\n        <h1 className=\"clock__name\">{name}</h1>\n        <p className=\"clock__time\" data-cy=\"time\">\n          <span className=\"clock__time-text\">\n            {'Current time: '}\n          </span>\n          <span className=\"clock__time-time\">\n            {time}\n          </span>\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Buttons } from './components/Buttons';\nimport { Clock } from './components/Clock';\n\nconst clockNames = [\n  'Clock',\n  'New Clock',\n  'Fine Clock',\n  'Nice Clock',\n  'Brigth Clock',\n  'Smart Clock',\n];\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: string;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 'Clock',\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  randomName = () => {\n    this.setState({\n      clockName: clockNames[Math.floor(Math.random() * 6)],\n    });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isClockVisible && (\n          <Clock isClockVisible={isClockVisible} name={clockName} />\n        )}\n\n        <Buttons\n          isClockVisible={isClockVisible}\n          showClock={this.showClock}\n          hideClock={this.hideClock}\n          randomName={this.randomName}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}